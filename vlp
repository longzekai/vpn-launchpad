#!/bin/bash

DIR=`dirname $0`
VLPHOME="$(cd $DIR; pwd)"
. $VLPHOME/vlp.env
VLPCFG="$VLPHOME/.vpn-launchpad"
VLPKEY="$VLPCFG/$STACKID.*.pem"
VLPDKDIR="$VLPHOME/vpnlaunchpad"

ARCH=`uname -m`
DKUID=`id -u`
DKGID=`id -g`
VLPUSER="vlp"
VLPGROUP="vlp"
IMGNAME="samuelhbne/vpnlaunchpad"
CTNNAME="vpnlaunchpad"

DKVER=`docker -v 2>/dev/null|awk '{print $3}'`
if [ "$DKVER" = "" ]; then
	echo "Docker executable not found.."
	echo "Abort."
	exit 255
fi

case $ARCH in
	armv6l|armv7l)
		TARGET=arm
		;;
	x86_64|i686|i386)
		TARGET=amd64
		;;
	aarch64)
		TARGET=arm64
		;;
	*)
		echo "Unsupported arch"
		exit
		;;
esac

for option in "$@"
do
	case "$option" in
		--from-src)
			BDSRC=1
			;;
		*)
			;;
	esac
done

if [ "$BDSRC" = "1" ]; then
	echo "Building vpnlaunchpad image..."
	docker build --rm=true -t $IMGNAME:$TARGET -f $VLPDKDIR/Dockerfile.$TARGET $VLPDKDIR/
	echo "Done."
fi

BEXIST=`docker ps| grep $CTNNAME.$DKUID.$DKGID|wc -l`
if [ $BEXIST -eq 0 ]; then
	docker stop $CTNNAME.$DKUID.$DKGID 2>/dev/null
	docker rm $CTNNAME.$DKUID.$DKGID 2>/dev/null
	echo "Start AWS control center sandbox..."
	docker run --name=$CTNNAME.$DKUID.$DKGID -v $VLPHOME:/vlp -itd $IMGNAME:$TARGET /bin/bash
	docker exec -it $CTNNAME.$DKUID.$DKGID groupmod -g $DKGID $VLPGROUP
	docker exec -it $CTNNAME.$DKUID.$DKGID usermod -u $DKUID -g $DKGID $VLPUSER
	echo "Done."
fi

DOCKERCMD="docker exec --user $DKUID:$DKGID -it $CTNNAME.$DKUID.$DKGID"

if [[ $# = 0 ]]; then
	$DOCKERCMD /vlp/bin/vlp-menu
else
	subcmd="$1"
	case $subcmd in
		init)
			shift
			mkdir -p $VLPHOME/.vpn-launchpad $VLPHOME/.aws
			BPROFILE=`grep "\[profile $PROFILE\]" $VLPHOME/.aws/config 2>/dev/null`
			if [ "$BPROFILE" = "" ]; then
				echo -e "[profile $PROFILE]\nregion = ap-northeast-1\noutput = json">>$VLPHOME/.aws/config
			fi
			$DOCKERCMD bash -c "while read -r -t 0; do read -r; done; /usr/bin/aws --profile $PROFILE configure"
			;;
		build)
			shift
			$DOCKERCMD bash -c "/vlp/bin/vlp-random $*; /vlp/bin/vlp-build $*; /vlp/bin/vlp-status --all"
			;;
		status)
			shift
			$DOCKERCMD /vlp/bin/vlp-status "$*"
			;;
		purge)
			shift
			$DOCKERCMD /vlp/bin/vlp-purge
			docker stop $CTNNAME.$DKUID.$DKGID 2>/dev/null
			docker rm $CTNNAME.$DKUID.$DKGID 2>/dev/null
			;;
		random)
			shift
			$DOCKERCMD /vlp/bin/vlp-random
			;;
		ssh)
			shift
			if ls $VLPKEY 1> /dev/null 2>&1; then
				echo "Private key found: `ls $VLPKEY`"
				$DOCKERCMD /vlp/bin/vlp-ssh "$@"
			else
				echo "Private key not found"
				echo "Not created from this box?"
				echo "Abort."
				exit
			fi
			;;
		*)
			shift
			$DOCKERCMD /vlp/bin/vlp-menu
			;;
	esac
fi
