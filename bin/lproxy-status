#!/bin/bash

CTNNAME="proxy-ssllibev"
DKVER=`docker -v 2>/dev/null|awk '{print $3}'`

if [ "$DKVER" = "" ]; then
	echo "Docker executable not found."
	echo "Abort."
	exit 255
fi

BEXIST=`docker ps| grep $CTNNAME|wc -l`

if [ $BEXIST -eq 0 ]; then
	echo "Local proxy is not running."
	exit
else
	echo "Local proxy started."
	echo
fi

SOCKSPORT=`docker inspect -f '{{(index (index .NetworkSettings.Ports "1080/tcp") 0).HostPort}}' $CTNNAME`
HTTPPORT=`docker inspect -f '{{(index (index .NetworkSettings.Ports "8123/tcp") 0).HostPort}}' $CTNNAME`
DNSPORT=`docker inspect -f '{{(index (index .NetworkSettings.Ports "53/udp") 0).HostPort}}' $CTNNAME`
VPSADDR=`docker inspect -f '{{(index (index .Config "Cmd") 1)}}' $CTNNAME`

echo "Checking local HTTP proxy on TCP:$HTTPPORT ..."
echo "curl -sx http://127.0.0.1:$HTTPPORT http://ifconfig.co"
IFADDR=`curl -sx http://127.0.0.1:$HTTPPORT http://ifconfig.co`
echo "$IFADDR"
if [ "$IFADDR" = "$VPSADDR" ]; then
	echo -e "Passed"
else
	echo -e "Failed"
fi
echo

echo "Checking local SOCKS5 proxy on TCP:$SOCKSPORT ..."
echo "curl -sx socks5h://127.0.0.1:$SOCKSPORT http://ifconfig.co"
IFADDR=`curl -sx socks5h://127.0.0.1:$SOCKSPORT http://ifconfig.co`
echo "$IFADDR"
if [ "$IFADDR" = "$VPSADDR" ]; then
	echo -e "Passed"
else
	echo -e "Failed"
fi
echo

echo "Checking local DNS proxy on UDP:$DNSPORT ..."
echo "dig +short @127.0.0.1 -p $DNSPORT twitter.com"
TWITTIP=`dig +short @127.0.0.1 -p $DNSPORT twitter.com`
echo "$TWITTIP"

TWITTIP=`echo "$TWITTIP"|head -n1`
if [ "$TWITTIP" = "" ]; then
	echo "Failed"
else
	echo
	echo "Checking $TWITTIP IP owner ..."
	echo "docker exec -it $CTNNAME whois $TWITTIP|grep OrgId"
	docker exec -it $CTNNAME whois $TWITTIP|grep OrgId
	ORGID=`docker exec -it $CTNNAME whois $TWITTIP|grep OrgId|awk '{print $2}'|tr -d '\r\n'`
	if [ "$ORGID" = "TWITT" ]; then
		echo -e "Passed"
	else
		echo -e "Failed"
	fi
	echo
fi
echo "Done."
