#!/bin/bash

DIR=`dirname $0`
VLPDIR="$(cd $DIR; cd ..; pwd)"
VLPHOME="$HOME/.vpn-launchpad"
UBUNTUVER=bionic

PROFILE="default"
REGION=`aws configure get region`
STACKID="vlp-$UBUNTUVER"

if [ ! -z $1 ]; then
	STACKID="$1";
fi

aws --output table iam get-user
if [ "$?" != "0" ]; then
	echo "Please init aws first."
	exit
fi

echo "Querying Instance of $STACKID..."
# aws --profile $PROFILE --region $REGION --output table ec2 describe-instances --filters "Name=key-name,Values=$STACKID-key" --query 'Reservations[].Instances[0].PublicIpAddress'
aws --profile $PROFILE --region $REGION --output table ec2 describe-instances --filters "Name=key-name,Values=$STACKID-key" --query 'Reservations[*].Instances[*].{IP: PublicIpAddress, LaunchTime: LaunchTime, InstanceType: InstanceType, InstanceId: InstanceId, AvailabilityZone: Placement.AvailabilityZone}'

RESULT=`aws --profile $PROFILE --region $REGION --output text ec2 describe-instances --filters "Name=key-name,Values=$STACKID-key" --query 'Reservations[*].Instances[*].{IP: PublicIpAddress, InstanceId: InstanceId}'|grep -v None|head -n1`

echo
IPADDR=`echo $RESULT|awk '{print $1}'`
INSTID=`echo $RESULT|awk '{print $2}'`

aws --profile $PROFILE --region $REGION --output table ec2 describe-tags --filters "Name=resource-id,Values=$INSTID" --query 'Tags[*].{ResourceId: ResourceId, Key: Key, Value: Value}'

aws --profile $PROFILE --region $REGION --output table ec2 describe-security-groups --group-names $STACKID-sg --query "SecurityGroups[*].{Name:GroupName}"

if [ ! -z "$IPADDR" ]; then
	echo "VPN-SERVER: $IPADDR $INSTID"
else
	echo "VPN-SERVER: None"
fi
